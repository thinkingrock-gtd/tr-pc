//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-520
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2008.02.14 at 10:19:02 AM EST
//
package au.com.thinkingrock.xsd.tr.view.actions.screens;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
import au.com.trgtd.tr.view.actns.screens.filters.FilterContext;
import au.com.trgtd.tr.view.actns.screens.filters.FilterCriterionEnergy;
import au.com.trgtd.tr.view.actns.screens.filters.FilterCriterionPriority;
import au.com.trgtd.tr.view.actns.screens.filters.FilterCriterionTime;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateActionFrom;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateActionTo;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateCreatedFrom;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateCreatedTo;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateDoneFrom;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateDoneTo;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateDueFrom;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateDueTo;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateFollowupFrom;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateFollowupTo;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateScheduleFrom;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateScheduleTo;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateStartFrom;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDateStartTo;
import au.com.trgtd.tr.view.actns.screens.filters.FilterDone;
import au.com.trgtd.tr.view.actns.screens.filters.FilterSearch;
import au.com.trgtd.tr.view.actns.screens.filters.FilterStatus;
import au.com.trgtd.tr.view.actns.screens.filters.FilterTopic;


/**
 * <p>Java class for FilterID.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="FilterID">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="search"/>
 *     &lt;enumeration value="topic"/>
 *     &lt;enumeration value="done"/>
 *     &lt;enumeration value="status"/>
 *     &lt;enumeration value="context"/>
 *     &lt;enumeration value="time"/>
 *     &lt;enumeration value="energy"/>
 *     &lt;enumeration value="priority"/>
 *     &lt;enumeration value="created-from"/>
 *     &lt;enumeration value="created-to"/>
 *     &lt;enumeration value="done-from"/>
 *     &lt;enumeration value="done-to"/>
 *     &lt;enumeration value="action-from"/>
 *     &lt;enumeration value="action-to"/>
 *     &lt;enumeration value="start-from"/>
 *     &lt;enumeration value="start-to"/>
 *     &lt;enumeration value="due-from"/>
 *     &lt;enumeration value="due-to"/>
 *     &lt;enumeration value="followup-from"/>
 *     &lt;enumeration value="followup-to"/>
 *     &lt;enumeration value="schedule-from"/>
 *     &lt;enumeration value="schedule-to"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
@XmlType(name = "FilterID")
@XmlEnum
public enum FilterID {
    
    @XmlEnumValue("search")
    SEARCH("search"),
    @XmlEnumValue("topic")
    TOPIC("topic"),
    @XmlEnumValue("done")
    DONE("done"),
    @XmlEnumValue("status")
    STATUS("status"),
    @XmlEnumValue("context")
    CONTEXT("context"),
    @XmlEnumValue("time")
    TIME("time"),
    @XmlEnumValue("energy")
    ENERGY("energy"),
    @XmlEnumValue("priority")
    PRIORITY("priority"),
    @XmlEnumValue("created-from")
    CREATED_FROM("created-from"),
    @XmlEnumValue("created-to")
    CREATED_TO("created-to"),
    @XmlEnumValue("done-from")
    DONE_FROM("done-from"),
    @XmlEnumValue("done-to")
    DONE_TO("done-to"),
    @XmlEnumValue("action-from")
    ACTION_FROM("action-from"),
    @XmlEnumValue("action-to")
    ACTION_TO("action-to"),
    @XmlEnumValue("start-from")
    START_FROM("start-from"),
    @XmlEnumValue("start-to")
    START_TO("start-to"),
    @XmlEnumValue("due-from")
    DUE_FROM("due-from"),
    @XmlEnumValue("due-to")
    DUE_TO("due-to"),
    @XmlEnumValue("followup-from")
    FOLLOWUP_FROM("followup-from"),
    @XmlEnumValue("followup-to")
    FOLLOWUP_TO("followup-to"),
    @XmlEnumValue("schedule-from")
    SCHEDULE_FROM("schedule-from"),
    @XmlEnumValue("schedule-to")
    SCHEDULE_TO("schedule-to");
    
    private final String value;
    
    FilterID(String v) {
        value = v;
    }
    
    public String value() {
        return value;
    }
    
    public static FilterID fromValue(String v) {
        for (FilterID c: FilterID.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
    
    public static Map<String, Byte> map;
    
    public synchronized byte index() {
        if (map == null) {
            map = new HashMap<>();
            map.put(SEARCH.value, FilterSearch.INDEX);
            map.put(TOPIC.value, FilterTopic.INDEX);
            map.put(DONE.value, FilterDone.INDEX);
            map.put(STATUS.value, FilterStatus.INDEX);
            map.put(CONTEXT.value, FilterContext.INDEX);
            map.put(TIME.value, FilterCriterionTime.INDEX);
            map.put(ENERGY.value, FilterCriterionEnergy.INDEX);
            map.put(PRIORITY.value, FilterCriterionPriority.INDEX);
            map.put(CREATED_FROM.value, FilterDateCreatedFrom.INDEX);
            map.put(CREATED_TO.value, FilterDateCreatedTo.INDEX);
            map.put(DONE_FROM.value, FilterDateDoneFrom.INDEX);
            map.put(DONE_TO.value, FilterDateDoneTo.INDEX);
            map.put(ACTION_FROM.value, FilterDateActionFrom.INDEX);
            map.put(ACTION_TO.value, FilterDateActionTo.INDEX);
            map.put(START_FROM.value, FilterDateStartFrom.INDEX);
            map.put(START_TO.value, FilterDateStartTo.INDEX);
            map.put(DUE_FROM.value, FilterDateDueFrom.INDEX);
            map.put(DUE_TO.value, FilterDateDueTo.INDEX);
            map.put(FOLLOWUP_FROM.value, FilterDateFollowupFrom.INDEX);
            map.put(FOLLOWUP_TO.value, FilterDateFollowupTo.INDEX);
            map.put(SCHEDULE_FROM.value, FilterDateScheduleFrom.INDEX);
            map.put(SCHEDULE_TO.value, FilterDateScheduleTo.INDEX);            
        }
        return map.get(value);
    }
    
}
