<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/*
 * ThinkingRock, a project management tool for Personal Computers. 
 * Copyright (C) 2006 Avente Pty Ltd
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
-->
<xsl:stylesheet version="1.1" 
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                xmlns:fo="http://www.w3.org/1999/XSL/Format" 
                exclude-result-prefixes="fo"> 
    
    <xsl:output method="xml" 
                version="1.0" 
                omit-xml-declaration="no" 
                indent="yes"/>
    
    <!--=====================================================================-->
    <!-- Parameters                                                          -->	
    <!--=====================================================================-->
    <xsl:param name="project-key"/>  	
    <xsl:param name="subprojects"/> 
    <xsl:param name="show-notes"/> 	 	
    <xsl:param name="striked-done"/> 	 	
    <xsl:param name="colour"/>  
    <xsl:param name="font"/>  		
    
    <!--=====================================================================-->
    <!-- Variables                                                           -->	
    <!--=====================================================================-->
    <xsl:variable name="today" select="number(substring(/data/date,1,8))"/>
    <xsl:variable name="week"  select="number(substring(/data/week,1,8))"/>
    
    <!--=====================================================================-->
    <!-- Root element                                                        -->
    <!--=====================================================================-->
    <xsl:template match="data">
        <fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format">
            
            <fo:layout-master-set>
                <fo:simple-page-master master-name="A4"
                                       page-height="297mm"
                                       page-width="210mm"
                                       margin-top="10mm"
                                       margin-bottom="5mm"
                                       margin-left="10mm"
                                       margin-right="10mm">
                    <fo:region-body margin-top="10mm" margin-bottom="10mm"/>
                    <fo:region-before extent="10mm"/>
                    <fo:region-after extent="10mm"/>
                </fo:simple-page-master>
            </fo:layout-master-set>
            
            <fo:page-sequence master-reference="A4">		
                
                <!-- Header -->
                <fo:static-content flow-name="xsl-region-before">
                    <fo:block font-family="{$font}" font-weight="bold"  font-size="11pt">
                        <fo:table table-layout="fixed" width="100%" border-collapse="collapse"
                                  border-bottom-style="solid" border-bottom-width="0.5pt" border-bottom-color="grey">
                            <fo:table-column column-width="50%"/>
                            <fo:table-column column-width="50%"/>
                            <fo:table-body>
                                <fo:table-row>
                                    <fo:table-cell>
                                        <fo:block>Project Details</fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell>
                                        <fo:block text-align="end">
                                            <xsl:call-template name="format-date">
                                                <xsl:with-param name="d" select="date" />
                                            </xsl:call-template>				  	
                                        </fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </fo:table-body>
                        </fo:table>
                    </fo:block>
                </fo:static-content>
                
                <!-- Footer -->    		
                <fo:static-content flow-name="xsl-region-after">
                    <fo:block font-family="{$font}" font-size="8pt">
                        <fo:table table-layout="fixed" width="100%" border-collapse="collapse"
                                  border-top-style="solid" border-top-width="0.5pt" border-top-color="grey">
                            <fo:table-column column-width="50%"/>
                            <fo:table-column column-width="50%"/>
                            <fo:table-body>
                                <fo:table-row>
                                    <fo:table-cell>
                                        <fo:block>ThinkingRock (https://trgtd.com.au)</fo:block>
                                    </fo:table-cell>
                                    <fo:table-cell>
                                        <fo:block text-align="end">Page <fo:page-number/></fo:block>
                                    </fo:table-cell>
                                </fo:table-row>
                            </fo:table-body>
                        </fo:table>
                    </fo:block>
                </fo:static-content>
                
                <!-- Body -->      
                <fo:flow flow-name="xsl-region-body">
                    <fo:block font-family="{$font}" font-size="10pt" white-space-collapse="false" linefeed-treatment="preserve" white-space-treatment="preserve">
                        <xsl:call-template name="Process"/>
                    </fo:block>
                </fo:flow>
            </fo:page-sequence>
        </fo:root>
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Process.                                                            -->	
    <!--=====================================================================-->
    <xsl:template name="Process">
        
        <xsl:choose>
            <xsl:when test="$project-key='all'">
                <xsl:call-template name="ProcessAll"/>
            </xsl:when>
            <xsl:otherwise>
                <xsl:call-template name="ProcessProject" >
                    <xsl:with-param name="project-key" select="$project-key" />
                </xsl:call-template>				
            </xsl:otherwise>
        </xsl:choose>
        
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Process all top level projects.                                     -->	
    <!--=====================================================================-->
    <xsl:template name="ProcessAll">
        
        <xsl:for-each select="//projects/project[not(parent-key)]">
            <xsl:call-template name="ProcessProject" >
                <xsl:with-param name="project-key" select="@key" />
            </xsl:call-template>				
        </xsl:for-each>
        
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Process project and then sub-projects recursively.                  -->	
    <!--=====================================================================-->
    <xsl:template name="ProcessProject">
        <xsl:param name="project-key"/>			
        
        <fo:block break-before="page"/>							
        
        <xsl:call-template name="WriteProject" >
            <xsl:with-param name="project-key" select="$project-key" />
        </xsl:call-template>				
        
        <!-- Processs sub-projects if required -->
        <xsl:if test="$subprojects='true'">
            <xsl:for-each select="//project[@key=$project-key]/children/project">
                <xsl:call-template name="ProcessProject" >
                    <xsl:with-param name="project-key" select="@key" />
                </xsl:call-template>				
            </xsl:for-each>
        </xsl:if>
        
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Write project details and list of child actions and sub-projects.   -->	
    <!--=====================================================================-->
    <xsl:template name="WriteProject">
        <xsl:param name="project-key"/>		
        
        <!-- write project details -->
        <xsl:apply-templates select="//projects/project[@key=$project-key]" />
        
        <!-- write children tree -->
        <xsl:call-template name="WriteProjectTree" >
            <xsl:with-param name="project-key" select="$project-key" />
            <xsl:with-param name="indent" select="0" />
        </xsl:call-template>				
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Write the project details.                                          -->	
    <!--=====================================================================-->
    <xsl:template match="project">
        
        <xsl:variable name="done" select="done" />
        
        <xsl:variable name="text-decoration">		
            <xsl:choose>
                <xsl:when test="$done='true' and $striked-done='true'">line-through</xsl:when>
                <xsl:otherwise>none</xsl:otherwise>
            </xsl:choose>
        </xsl:variable>		
        
        <fo:block text-decoration="{$text-decoration}">
            
            <fo:table table-layout="fixed" width="100%" border-collapse="collapse">
                <fo:table-column column-width="100%"/>
                <fo:table-body>
                    
                    <fo:table-row>
                        <fo:table-cell border-style="solid" border-width="0.3pt" border-color="grey">							
                            <fo:block>
                                <xsl:call-template name="tick-box-bold" ><xsl:with-param name="ticked" select="$done"/></xsl:call-template>								
                                <fo:inline font-weight="bold"><xsl:value-of select="desc"/></fo:inline>
                            </fo:block>			
                        </fo:table-cell>
                    </fo:table-row>
                    
                    <fo:table-row><fo:table-cell><fo:block line-height="6pt" text-decoration="none">&#xA0;</fo:block></fo:table-cell></fo:table-row>
                    
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block><fo:inline font-size="8pt" font-weight="bold">Topic</fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row>
                        <fo:table-cell border-style="solid" border-width="0.3pt" border-color="grey">
                            <fo:block>
                                <xsl:variable name="topic-key" select="topic-key"/>			
                                <fo:inline><xsl:value-of select="//topics/topic[@key=$topic-key]/name"/></fo:inline>			
                            </fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    
                    <fo:table-row><fo:table-cell><fo:block line-height="6pt" text-decoration="none">&#xA0;</fo:block></fo:table-cell></fo:table-row>
                    
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block><fo:inline font-size="8pt" font-weight="bold">Purpose</fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row>
                        <fo:table-cell border-style="solid" border-width="0.3pt" border-color="grey">
                            <fo:block><fo:inline><xsl:value-of select="purpose"/><fo:inline text-decoration="none">&#xA0;</fo:inline></fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    
                    <fo:table-row><fo:table-cell><fo:block line-height="6pt" text-decoration="none">&#xA0;</fo:block></fo:table-cell></fo:table-row>
                    
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block><fo:inline font-size="8pt" font-weight="bold">Vision</fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row>
                        <fo:table-cell border-style="solid" border-width="0.3pt" border-color="grey">
                            <fo:block><fo:inline><xsl:value-of select="success"/><fo:inline text-decoration="none">&#xA0;</fo:inline></fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    
                    <fo:table-row><fo:table-cell><fo:block line-height="6pt" text-decoration="none">&#xA0;</fo:block></fo:table-cell></fo:table-row>
                    
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block><fo:inline font-size="8pt" font-weight="bold">Brainstorming</fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>						
                    <fo:table-row>
                        <fo:table-cell border-style="solid" border-width="0.3pt" border-color="grey">
                            <fo:block><fo:inline><xsl:value-of  select="brainstorming"/><fo:inline text-decoration="none">&#xA0;</fo:inline></fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    
                    <fo:table-row><fo:table-cell><fo:block line-height="6pt" text-decoration="none">&#xA0;</fo:block></fo:table-cell></fo:table-row>
                    
                    <fo:table-row>
                        <fo:table-cell>
                            <fo:block><fo:inline font-size="8pt" font-weight="bold">Organising</fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row>						
                        <fo:table-cell border-style="solid" border-width="0.3pt" border-color="grey">
                            <fo:block><fo:inline><xsl:value-of  select="organising"/><fo:inline text-decoration="none">&#xA0;</fo:inline></fo:inline></fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    
                    <fo:table-row><fo:table-cell><fo:block line-height="6pt" text-decoration="none">&#xA0;</fo:block></fo:table-cell></fo:table-row>
                    
                </fo:table-body>
            </fo:table>
        </fo:block>		
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Write the project children tree.                                    -->	
    <!--=====================================================================-->
    <xsl:template name="WriteProjectTree">
        
        <xsl:param name="project-key"/>		
        <xsl:param name="indent"/>		
        
        <xsl:for-each select="//project[@key=$project-key]/children/*">	
            
            <xsl:choose>
                <xsl:when test="self::project">		
                    <xsl:variable name="project-key" select="@key"/>										
                    <xsl:variable name="project-done" select="//projects/project[@key=$project-key]/done"/>										
                    <xsl:variable name="text-decoration-project">		
                        <xsl:choose>
                            <xsl:when test="$project-done='true' and $striked-done='true'">line-through</xsl:when>
                            <xsl:otherwise>none</xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>		                    
                    <fo:block text-decoration="{$text-decoration-project}">
                        <xsl:call-template name="write-indent" >
                            <xsl:with-param name="n" select="$indent" />
                        </xsl:call-template>											
                        <xsl:call-template name="tick-box-bold" ><xsl:with-param name="ticked" select="$project-done"/></xsl:call-template>
                        <fo:inline font-weight="bold"><xsl:value-of select="//projects/project[@key=$project-key]/desc"/></fo:inline>
                    </fo:block>
                    
                    <!-- recursive call to write children tree -->
                    <xsl:call-template name="WriteProjectTree" >
                        <xsl:with-param name="project-key" select="@key" />
                        <xsl:with-param name="indent" select="number($indent) + 4" />
                    </xsl:call-template>				
                </xsl:when>				
                <xsl:when test="self::action">
                    <xsl:variable name="action-key" select="@key"/>						
                    <xsl:variable name="done" select="//action[@key=$action-key]/done"/>                    
                    <xsl:variable name="text-decoration-action">		
                        <xsl:choose>
                            <xsl:when test="$done='true' and $striked-done='true'">line-through</xsl:when>
                            <xsl:otherwise>none</xsl:otherwise>
                        </xsl:choose>
                    </xsl:variable>		                    
                    <fo:block text-decoration="{$text-decoration-action}">
                        <xsl:apply-templates select="//actions/action[@key=$action-key]" >
                            <xsl:with-param name="indent" select="$indent" />					
                        </xsl:apply-templates>
                    </fo:block>												
                    
                </xsl:when>
            </xsl:choose>
            
        </xsl:for-each>
        
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Write the action details for the children tree.                     -->	
    <!--=====================================================================-->
    <xsl:template match="action">
        
        <xsl:param name="indent"/>		
        
        <xsl:variable name="context-key" select="context-key"/>								
        <xsl:variable name="done" select="done"/>								
        
        <xsl:call-template name="write-indent" ><xsl:with-param name="n" select="$indent"/></xsl:call-template>							
        
        <xsl:choose>
            <xsl:when test="state[@type='ASAP']">
                <xsl:call-template name="tick-box"><xsl:with-param name="ticked" select="$done"/></xsl:call-template>
                <fo:inline><xsl:value-of select="desc"/></fo:inline>		
                <xsl:call-template name="write-indent"><xsl:with-param name="n" select="2"/></xsl:call-template>							
                <fo:inline font-style="italic"> <xsl:value-of select="//contexts/context[@key=$context-key]/name"/></fo:inline>												
                <xsl:call-template name="notes">
                    <xsl:with-param name="notes" select="notes"/>
                    <xsl:with-param name="space" select="$indent"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="state[@type='SCHEDULED']">
                <xsl:call-template name="tick-box"><xsl:with-param name="ticked" select="$done"/></xsl:call-template>
                <fo:inline><xsl:value-of select="desc"/></fo:inline>			
                <fo:inline font-weight="bold"> Scheduled </fo:inline>			
                <fo:inline><xsl:call-template name="format-datetime"><xsl:with-param name="d" select="state/date"/></xsl:call-template></fo:inline>  					
                <xsl:call-template name="write-indent"><xsl:with-param name="n" select="2"/></xsl:call-template>							
                <fo:inline font-style="italic"> <xsl:value-of select="//contexts/context[@key=$context-key]/name"/></fo:inline>							
                <xsl:call-template name="notes">
                    <xsl:with-param name="notes" select="notes"/>
                    <xsl:with-param name="space" select="$indent"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="state[@type='INACTIVE']">
                <xsl:call-template name="tick-box"><xsl:with-param name="ticked" select="$done"/></xsl:call-template>
                <fo:inline color="grey"><xsl:value-of select="desc"/></fo:inline>							
                <xsl:call-template name="write-indent"><xsl:with-param name="n" select="2"/></xsl:call-template>							
                <fo:inline color="grey" font-style="italic"> <xsl:value-of select="//contexts/context[@key=$context-key]/name"/></fo:inline>							
                <xsl:call-template name="notes">
                    <xsl:with-param name="notes" select="notes"/>
                    <xsl:with-param name="space" select="$indent"/>
                </xsl:call-template>
            </xsl:when>
            <xsl:when test="state[@type='DELEGATED']">
                <xsl:call-template name="tick-box"><xsl:with-param name="ticked" select="$done"/></xsl:call-template>
                <fo:inline><xsl:value-of select="desc"/></fo:inline>			
                <fo:inline font-weight="bold"> Delegate to </fo:inline>  					
                <fo:inline><xsl:value-of select="state/to"/></fo:inline>			
                <fo:inline font-weight="bold"> Follow-up </fo:inline>  					
                <fo:inline><xsl:call-template name="format-date"><xsl:with-param name="d" select="state/date"/></xsl:call-template></fo:inline>  					
                <xsl:call-template name="write-indent"><xsl:with-param name="n" select="2"/></xsl:call-template>							
                <fo:inline font-style="italic"> <xsl:value-of select="//contexts/context[@key=$context-key]/name"/></fo:inline>							
                <xsl:call-template name="notes">
                    <xsl:with-param name="notes" select="notes"/>
                    <xsl:with-param name="space" select="$indent"/>
                </xsl:call-template>
            </xsl:when>
        </xsl:choose>
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Notes                                                               -->	
    <!--=====================================================================-->
    <xsl:template name="notes">
        <xsl:param name="notes"/>		
        <xsl:param name="space"/>		
        <xsl:variable name="n" select="9 + number($space) * 3"/>						
        <xsl:if test="$show-notes='true'">
            <fo:table table-layout="fixed" width="100%" border-collapse="collapse">
                <fo:table-column column-width="{$n}px"/>
                <fo:table-column/>
                <fo:table-body>
                    <fo:table-row>
                        <fo:table-cell>							
                            <fo:block>
                                <fo:inline text-decoration="none">&#xA0;</fo:inline>
                            </fo:block>			
                        </fo:table-cell>
                        <fo:table-cell border-style="solid" border-width="0.3pt" border-color="grey">							
                            <fo:block>
                                <fo:inline><xsl:value-of select="$notes"/></fo:inline>
                                <fo:inline text-decoration="none">&#xA0;</fo:inline>
                            </fo:block>			
                        </fo:table-cell>
                    </fo:table-row>
                </fo:table-body>
            </fo:table>
        </xsl:if>
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Format date                                                         -->	
    <!--=====================================================================-->
    <xsl:template name="format-date">
        <xsl:param name="d"/>		
        <xsl:variable name="date" select="number(substring($d,1,8))"/>		
        <xsl:variable name="color">
            <xsl:choose>
                <xsl:when test="$colour='false'">black</xsl:when>			
                <xsl:when test="$date &lt; $today">red</xsl:when>
                <xsl:when test="$date = $today">blue</xsl:when>			
                <xsl:when test="$date &lt;= $week">green</xsl:when>			
                <xsl:otherwise>black</xsl:otherwise>							
            </xsl:choose>			
        </xsl:variable>	
        <fo:inline color="{$color}">
            <xsl:value-of select="substring($d, 15, string-length($d)-23)"/>							
        </fo:inline>
    </xsl:template> 	
    
    <!--=====================================================================-->
    <!-- Format date and time                                                -->	
    <!--=====================================================================-->
    <xsl:template name="format-datetime">
        <xsl:param name="d"/>		
        <xsl:variable name="date" select="number(substring($d,1,8))"/>		
        <xsl:variable name="color">
            <xsl:choose>
                <xsl:when test="$colour = 'false'">black</xsl:when>			
                <xsl:when test="$date &lt; $today">red</xsl:when>
                <xsl:when test="$date = $today">blue</xsl:when>			
                <xsl:when test="$date &lt;= $week">green</xsl:when>			
                <xsl:otherwise>black</xsl:otherwise>							
            </xsl:choose>			
        </xsl:variable>	
        <fo:inline color="{$color}">
            <xsl:value-of select="substring($d, 15, string-length($d)-17)"/>							
        </fo:inline>
    </xsl:template> 	
    
    <!--=====================================================================-->
    <!-- Draw tick box                                                       -->	
    <!--=====================================================================-->
    <xsl:template name="tick-box">
        <xsl:param name="ticked"/>	        
        <xsl:choose>
            <xsl:when test="$ticked='true'">
                <fo:inline text-decoration="none" font-family="DejaVuSans">&#x2611;</fo:inline>
            </xsl:when>			
            <xsl:otherwise>
                <fo:inline text-decoration="none" font-family="DejaVuSans">&#x2610;</fo:inline>
            </xsl:otherwise>							
        </xsl:choose>			        
        <fo:inline><xsl:text> </xsl:text></fo:inline>	
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Draw bold tick box                                                  -->	
    <!--=====================================================================-->
    <xsl:template name="tick-box-bold">
        <xsl:param name="ticked"/>	
        <xsl:choose>
            <xsl:when test="$ticked='true'">
                <fo:inline text-decoration="none" font-family="DejaVuSans">&#x2611;</fo:inline>
            </xsl:when>			
            <xsl:otherwise>
                <fo:inline text-decoration="none" font-family="DejaVuSans">&#x2610;</fo:inline>
            </xsl:otherwise>							
        </xsl:choose>			        
        <fo:inline><xsl:text> </xsl:text></fo:inline>	
    </xsl:template>
    
    <!--=====================================================================-->
    <!-- Indent                                                              -->	
    <!--=====================================================================-->
    <xsl:template name="write-indent">
        <xsl:param name="n"/>			
        <xsl:if test="number($n) > 0">
            <fo:inline text-decoration="none"><xsl:text> </xsl:text></fo:inline>
            <xsl:call-template name="write-indent" >
                <xsl:with-param name="n" select="number($n) - 1" />
            </xsl:call-template>							
        </xsl:if>			
    </xsl:template>
    
    <!--=====================================================================-->
    
</xsl:stylesheet>
